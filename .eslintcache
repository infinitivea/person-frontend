[{"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\index.js":"1","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\App.js":"2","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\PrivateRoutes\\PrivateRoutes.js":"4","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\services\\LocalStorageService.js":"5","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\context\\UserContext.js":"6","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Layout\\AdminLayout\\AdminLayout.js":"7","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Layout\\index.js":"8","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Layout\\PartnerLayout\\PartnerLayout.js":"9","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\config\\roles.js":"10","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Dashboard.js":"11","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\Home.js":"12","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Review.js":"13","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Register\\Partner.js":"14","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Admin\\Management\\Member.js":"15","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Admin\\Management\\Admin.js":"16","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Admin\\Management\\Partner.js":"17","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\BookingResult.js":"18","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\CheckAvailability.js":"19","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Booking.js":"20","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Information.js":"21","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\PartnerList.js":"22","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Register\\index.js":"23","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Login\\index.js":"24","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\config\\axios.js":"25"},{"size":592,"mtime":1607960797904,"results":"26","hashOfConfig":"27"},{"size":674,"mtime":1608471365702,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1607960797909,"results":"29","hashOfConfig":"27"},{"size":1673,"mtime":1609483014375,"results":"30","hashOfConfig":"27"},{"size":680,"mtime":1608465823544,"results":"31","hashOfConfig":"27"},{"size":111,"mtime":1608040323812,"results":"32","hashOfConfig":"27"},{"size":2995,"mtime":1608474175283,"results":"33","hashOfConfig":"27"},{"size":2538,"mtime":1608466593740,"results":"34","hashOfConfig":"27"},{"size":3066,"mtime":1609483763202,"results":"35","hashOfConfig":"27"},{"size":2260,"mtime":1609483763201,"results":"36","hashOfConfig":"27"},{"size":2181,"mtime":1608468763131,"results":"37","hashOfConfig":"27"},{"size":3891,"mtime":1608651494229,"results":"38","hashOfConfig":"27"},{"size":2020,"mtime":1608651328496,"results":"39","hashOfConfig":"27"},{"size":7635,"mtime":1609483763204,"results":"40","hashOfConfig":"27"},{"size":1327,"mtime":1609485408292,"results":"41","hashOfConfig":"27"},{"size":4762,"mtime":1608473922862,"results":"42","hashOfConfig":"27"},{"size":1809,"mtime":1608656996123,"results":"43","hashOfConfig":"27"},{"size":717,"mtime":1609483763204,"results":"44","hashOfConfig":"27"},{"size":2962,"mtime":1609483763205,"results":"45","hashOfConfig":"27"},{"size":1520,"mtime":1609483763203,"results":"46","hashOfConfig":"27"},{"size":7054,"mtime":1609483763203,"results":"47","hashOfConfig":"27"},{"size":2841,"mtime":1609483763206,"results":"48","hashOfConfig":"27"},{"size":4231,"mtime":1608656273436,"results":"49","hashOfConfig":"27"},{"size":3624,"mtime":1609484553726,"results":"50","hashOfConfig":"27"},{"size":1078,"mtime":1609485104910,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1o5v52v",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\index.js",[],["117","118"],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\App.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\PrivateRoutes\\PrivateRoutes.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\services\\LocalStorageService.js",["119"],"import jwt_decode from 'jwt-decode';\r\n\r\nconst setToken = (token) => {\r\n  localStorage.setItem('ACCESS_TOKEN', token);\r\n};\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem('ACCESS_TOKEN');\r\n};\r\n\r\nconst removeToken = () => {\r\n  localStorage.clear();\r\n};\r\n\r\nconst getRole = () => {\r\n  if (getToken()) {\r\n    const role = jwt_decode(localStorage.getItem('ACCESS_TOKEN')).role;\r\n    return role;\r\n  }\r\n  return 'GUEST';\r\n};\r\n\r\nconst getId = () => {\r\n  if (getToken()) {\r\n    const id = jwt_decode(localStorage.getItem('ACCESS_TOKEN')).id;\r\n    return id;\r\n  }\r\n  return { id: '' };\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  getRole,\r\n  getId,\r\n};\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\context\\UserContext.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Layout\\AdminLayout\\AdminLayout.js",["120","121","122","123","124","125"],"import React, { Children, useContext, useEffect, useState } from 'react';\r\nimport logo from '../../../images/SYNHUB_logo.png';\r\nimport { Layout, Menu, Breadcrumb, notification, Badge } from 'antd';\r\nimport { UserOutlined, LaptopOutlined, LogoutOutlined, NotificationOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport UserContext from '../../../context/UserContext';\r\nimport LocalStorageService from '../../../services/LocalStorageService';\r\n\r\nfunction AdminLayout({ children }) {\r\n  const { SubMenu } = Menu;\r\n  const { Header, Content, Sider, Footer } = Layout;\r\n\r\n  const { isAuthenticated, setIsAuthenticated, setRole } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const onClick = () => {\r\n    LocalStorageService.removeToken();\r\n    setIsAuthenticated(false);\r\n    setRole('GUEST');\r\n    notification.success({\r\n      description: 'Logout success.',\r\n    });\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ height: '100vh' }}>\r\n      <Header\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'start',\r\n          alignItems: 'center',\r\n          height: '64px',\r\n          backgroundColor: 'lightgreen',\r\n        }}\r\n      >\r\n        <img src={logo} alt=\"SYN HUB logo\" height=\"64px\" style={{ padding: '5px 0', objectFit: 'contain' }} />\r\n      </Header>\r\n      <Layout>\r\n        <Sider width={200} theme=\"light\">\r\n          <Menu mode=\"inline\" defaultOpenKeys={['sub1']} style={{ height: '100%', borderRight: 0 }}>\r\n            <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"Account Management\">\r\n              <Menu.Item key=\"1\">\r\n                <span>Member</span>\r\n                <Link to=\"/admin/users\" />\r\n              </Menu.Item>\r\n              <Menu.Item key=\"2\">\r\n                <span>Partner</span>\r\n                <Link to=\"/admin/partners\" />\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\">\r\n                <span>Admin</span>\r\n                <Link to=\"/admin/admins\" />\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"4\" icon={<LaptopOutlined />}>\r\n              Review Management\r\n            </Menu.Item>\r\n            <Menu.Item key=\"13\" icon={<LogoutOutlined />} onClick={onClick}>\r\n              Logout\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout style={{ padding: '0 24px 24px' }}>\r\n          <Breadcrumb style={{ margin: '16px 0' }}>\r\n            <Breadcrumb.Item>{children.type.name}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              padding: 24,\r\n              margin: 0,\r\n              minHeight: 280,\r\n            }}\r\n          >\r\n            {children}\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>© 2020 Copyright: Nuttawat Rojboonnark</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default AdminLayout;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Layout\\index.js",["126"],"import React, { useContext, useState } from 'react';\r\nimport bg from '../../images/bg.jpg';\r\nimport logo from '../../images/SYNHUB_logo.png';\r\nimport { Badge, Button, Col, Divider, Layout, Row } from 'antd';\r\nimport { BellOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport LocalStorageService from '../../services/LocalStorageService';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nfunction NavLayout({ children }) {\r\n  const { Header, Content, Footer } = Layout;\r\n\r\n  const { isAuthenticated, setIsAuthenticated, setRole } = useContext(UserContext);\r\n  const [count, setCount] = useState(5);\r\n  const history = useHistory();\r\n\r\n  const onClick = () => {\r\n    LocalStorageService.removeToken();\r\n    setIsAuthenticated(false);\r\n    setRole('GUEST');\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100%' }}>\r\n      <Header\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          height: '64px',\r\n          backgroundColor: 'lightgreen',\r\n        }}\r\n      >\r\n        <img src={logo} alt=\"SYN HUB logo\" height=\"64px\" style={{ padding: '5px 0', objectFit: 'contain' }} />\r\n        {!isAuthenticated && (\r\n          <Button type=\"link\" onClick={onClick}>\r\n            <Link to=\"/home\">Login</Link>\r\n          </Button>\r\n        )}\r\n        {isAuthenticated && (\r\n          <Row>\r\n            <Col span={24}>\r\n              <Badge count={count} style={{ marginRight: 8 }}>\r\n                <Button type=\"primary\" shape=\"circle\" icon={<BellOutlined />} style={{ marginRight: 8 }} />\r\n              </Badge>\r\n              <Divider type=\"vertical\" style={{ backgroundColor: 'black' }} />\r\n              <Button type=\"link\" onClick={onClick}>\r\n                Logout\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Header>\r\n      <Content\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          backgroundImage: `url(${bg})`,\r\n          backgroundSize: 'cover',\r\n        }}\r\n      >\r\n        {children}\r\n      </Content>\r\n      <Footer\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          height: '64px',\r\n          backgroundColor: 'lightgreen',\r\n        }}\r\n      >\r\n        <h1>© 2020 Copyright: Nuttawat Rojboonnark</h1>\r\n      </Footer>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default NavLayout;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Layout\\PartnerLayout\\PartnerLayout.js",["127","128","129"],"import React, { useContext, useState } from 'react';\r\nimport logo from '../../../images/SYNHUB_logo.png';\r\nimport { Layout, Menu, Breadcrumb, notification } from 'antd';\r\nimport {\r\n  EditOutlined,\r\n  LaptopOutlined,\r\n  LogoutOutlined,\r\n  CommentOutlined,\r\n  NotificationOutlined,\r\n  PieChartOutlined,\r\n} from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport LocalStorageService from '../../../services/LocalStorageService';\r\nimport UserContext from '../../../context/UserContext';\r\n\r\nfunction PartnerLayout({ children }) {\r\n  const { Header, Content, Sider, Footer } = Layout;\r\n\r\n  const { isAuthenticated, setIsAuthenticated, setRole } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  const onClick = () => {\r\n    LocalStorageService.removeToken();\r\n    setIsAuthenticated(false);\r\n    setRole('GUEST');\r\n    notification.success({\r\n      description: 'Logout success.',\r\n    });\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }}>\r\n      <Header\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'start',\r\n          alignItems: 'center',\r\n          height: '64px',\r\n          backgroundColor: 'lightgreen',\r\n        }}\r\n      >\r\n        <img src={logo} alt=\"SYN HUB logo\" height=\"64px\" style={{ padding: '5px 0', objectFit: 'contain' }} />\r\n      </Header>\r\n      <Layout>\r\n        <Sider width={200} theme=\"light\">\r\n          <Menu mode=\"inline\" style={{ height: '100%', borderRight: 0 }}>\r\n            <Menu.Item key=\"sub1\" icon={<PieChartOutlined />}>\r\n              <Link to=\"/partner/dashboard\">\r\n                <span>Dashboard</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"sub2\" icon={<EditOutlined />}>\r\n              <Link to=\"/partner/details\">\r\n                <span>Information Details</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"sub3\" icon={<LaptopOutlined />}>\r\n              <Link to=\"/partner/bookings\">\r\n                <span>Booking Management</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"sub4\" icon={<CommentOutlined />}>\r\n              <Link to=\"/partner/reviews\">\r\n                <span>Review Management</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"sub5\" icon={<LogoutOutlined />} onClick={onClick}>\r\n              Logout\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n        <Layout>\r\n          <Breadcrumb style={{ margin: '16px 24px' }}>\r\n            <Breadcrumb.Item>{children.type.name}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n          <Content\r\n            className=\"site-layout-background\"\r\n            style={{\r\n              padding: '0 24px',\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {children}\r\n          </Content>\r\n          <Footer style={{ textAlign: 'center' }}>© 2020 Copyright: Nuttawat Rojboonnark</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default PartnerLayout;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\config\\roles.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Dashboard.js",["130","131","132"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Col, Progress, Row, Statistic } from 'antd';\r\n\r\nfunction Dashboard() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [visitors, setVisitors] = useState(112893);\r\n  const [bookings, setBookings] = useState(55486);\r\n  const [reviews, setReviews] = useState(1234);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1500);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[8, 8]}>\r\n        <Col span={8}>\r\n          <Card bordered={false}>\r\n            <Statistic title=\"Visitors\" value={visitors} />\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card bordered={false}>\r\n            <Statistic title=\"Bookings\" value={bookings} />\r\n          </Card>\r\n        </Col>\r\n        <Col span={8}>\r\n          <Card bordered={false}>\r\n            <Statistic title=\"Reviews\" value={reviews} />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[8, 8]}>\r\n        <Col span={8} style={{ textAlign: 'center' }}>\r\n          <Card title=\"Visitors\" bordered={false}>\r\n            <Progress\r\n              type=\"dashboard\"\r\n              strokeColor={{\r\n                '0%': '#108ee9',\r\n                '100%': '#87d068',\r\n              }}\r\n              percent={loading ? 0 : 55}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: 'center' }}>\r\n          <Card title=\"Bookings\" bordered={false}>\r\n            <Progress\r\n              type=\"dashboard\"\r\n              strokeColor={{\r\n                '0%': '#108ee9',\r\n                '100%': '#87d068',\r\n              }}\r\n              percent={loading ? 0 : 75}\r\n            />\r\n          </Card>\r\n        </Col>\r\n        <Col span={8} style={{ textAlign: 'center' }}>\r\n          <Card title=\"Reviews\" bordered={false}>\r\n            <Progress\r\n              type=\"dashboard\"\r\n              strokeColor={{\r\n                '0%': '#108ee9',\r\n                '100%': '#87d068',\r\n              }}\r\n              percent={loading ? 0 : 90}\r\n            />\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\Home.js",["133"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Col, DatePicker, Form, Image, Input, Radio, Row } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport axios from '../../config/axios';\r\nimport decorate from '../../images/decorate.jpg';\r\nimport moment from 'moment';\r\n\r\nfunction Home() {\r\n  const [form] = Form.useForm();\r\n  const [reserveDate, setReserveDate] = useState('');\r\n  const [type, setType] = useState('Fitness');\r\n  const [email, setEmail] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const { id } = useContext(UserContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios.get(`/users?id=${id}`).then((res) => {\r\n      if (res.data !== null) {\r\n        form.setFieldsValue({\r\n          email: res.data.email,\r\n          phone: res.data.phone,\r\n        });\r\n        setEmail(res.data.email);\r\n        setPhone(res.data.phone);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const disabledDate = (current) => {\r\n    const currentDay = new Date();\r\n    let customDate = `${currentDay.getFullYear()}-${currentDay.getMonth() + 1}-${currentDay.getDate()}`;\r\n    return current && current < moment(customDate, 'YYYY-MM-DD');\r\n  };\r\n\r\n  const onDateChange = (date, dateStrings) => {\r\n    setReserveDate(dateStrings);\r\n  };\r\n\r\n  const onTypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onPhoneChange = (e) => {\r\n    setPhone(e.target.value);\r\n  };\r\n\r\n  const onFinish = () => {\r\n    history.push({ pathname: '/list', state: { reserveDate, type, email, phone } });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row\r\n        style={{\r\n          border: '1px solid black',\r\n          margin: '0 20%',\r\n        }}\r\n      >\r\n        <Col span={10} style={{ height: '500px' }}>\r\n          <Image\r\n            // src=\"https://www.milpitas-chamber.com/wp-content/uploads/2017/10/booking-tips.jpg\"\r\n            src={decorate}\r\n            alt=\"decorate image\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            style={{ objectFit: 'cover' }}\r\n          />\r\n        </Col>\r\n        <Col span={14} style={{ height: '500px', backgroundColor: 'white' }}>\r\n          <Form form={form} layout=\"vertical\" style={{ margin: '20px 5%' }} onFinish={onFinish}>\r\n            <Form.Item name=\"dates\" label={<h4>SELECT RESERVATION DATE</h4>}>\r\n              <DatePicker style={{ width: '100%' }} onChange={onDateChange} disabledDate={disabledDate} />\r\n            </Form.Item>\r\n            <Form.Item name=\"type\" label={<h4>BOOKING TYPE</h4>}>\r\n              <Radio.Group defaultValue={type} size=\"large\" onChange={onTypeChange}>\r\n                <Radio.Button value=\"Fitness\">Fitness</Radio.Button>\r\n                <Radio.Button value=\"Auditorium\">Auditorium</Radio.Button>\r\n                <Radio.Button value=\"Meeting Room\">Meeting Room</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"email\"\r\n              label={<h4>EMAIL</h4>}\r\n              rules={[{ required: true, message: 'Please input your Email!' }]}\r\n            >\r\n              <Input type=\"email\" placeholder=\"Enter your email\" size=\"large\" onChange={onEmailChange} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"phone\"\r\n              label={<h4>PHONE</h4>}\r\n              rules={[{ required: true, message: 'Please input your Phone!' }]}\r\n            >\r\n              <Input placeholder=\"Enter your phone number\" size=\"large\" onChange={onPhoneChange} />\r\n            </Form.Item>\r\n            <Button htmlType=\"submit\" type=\"primary\" size=\"large\" style={{ width: '100%' }}>\r\n              Check Availability\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Review.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Register\\Partner.js",["134"],"import React, { useContext, useState } from 'react';\r\nimport { Form, Input, Button, Row, Col, Typography, Radio, notification, TimePicker, Select } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport axios from '../../config/axios';\r\n\r\nfunction PartnerRegister() {\r\n  const { Title } = Typography;\r\n  const { Option } = Select;\r\n\r\n  const history = useHistory();\r\n  const { setRole } = useContext(UserContext);\r\n  const [form] = Form.useForm();\r\n  const [type, setType] = useState('Fitness');\r\n  const [closeDate, setCloseDate] = useState([]);\r\n  const [openTime, setOpenTime] = useState(null);\r\n  const [closeTime, setCloseTime] = useState(null);\r\n\r\n  const format = 'HH:mm';\r\n  const days = ['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'];\r\n\r\n  const optionSelectDay = days.map((day) => (\r\n    <Option key={day} value={day}>\r\n      {day}\r\n    </Option>\r\n  ));\r\n\r\n  const onTypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const onDayChange = (day) => {\r\n    setCloseDate(day);\r\n  };\r\n\r\n  const onOpenTime = (time) => {\r\n    if (time) {\r\n      setOpenTime(time.format(format));\r\n    }\r\n  };\r\n\r\n  const onCloseTime = (time) => {\r\n    if (time) {\r\n      setCloseTime(time.format(format));\r\n    }\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    axios\r\n      .post('/partners/register', {\r\n        email: values.email,\r\n        password: values.password,\r\n        company_name: values.name,\r\n        company_type: values.type,\r\n        phone: values.phone,\r\n      })\r\n      .then((res) => {\r\n        notification.success({\r\n          description: 'Register success.',\r\n        });\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        notification.error({\r\n          description: 'Email or Phone has already taken.',\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        initialValues={{ type }}\r\n        onFinish={onFinish}\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Row justify=\"center\">\r\n          <Title underline=\"true\" style={{ color: 'wheat' }}>\r\n            REGISTER - PARTNER\r\n          </Title>\r\n        </Row>\r\n        <Row justify=\"center\" style={{ width: '100%' }}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>EMAIL</span>}\r\n              name=\"email\"\r\n              rules={[{ required: true, message: 'Please input your Email!' }]}\r\n            >\r\n              <Input prefix={<UserOutlined />} type=\"email\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>PASSWORD</span>}\r\n              name=\"password\"\r\n              rules={[{ required: true, message: 'Please input your Password!' }]}\r\n            >\r\n              <Input.Password prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              label={<span style={{ color: 'wheat' }}>CONFIRM PASSWORD</span>}\r\n              dependencies={['password']}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n\r\n                    return Promise.reject('The two passwords that you entered do not match!');\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>COMPANY NAME</span>}\r\n              name=\"name\"\r\n              rules={[{ required: true, message: 'Please input your Name!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"type\"\r\n              label={<span style={{ color: 'wheat' }}>COMPANY TYPE</span>}\r\n              rules={[{ required: true, message: 'Please select your Type!' }]}\r\n            >\r\n              <Radio.Group size=\"large\" buttonStyle=\"solid\" onChange={onTypeChange}>\r\n                <Radio.Button value=\"Fitness\">Fitness</Radio.Button>\r\n                <Radio.Button value=\"Auditorium\">Auditorium</Radio.Button>\r\n                <Radio.Button value=\"Meeting Room\">Meeting Room</Radio.Button>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>PHONE</span>}\r\n              name=\"phone\"\r\n              rules={[{ required: true, message: 'Please input your Phone!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item label={<span style={{ color: 'wheat' }}>CLOSED DAY</span>} required>\r\n              <Row gutter={8} justify=\"center\">\r\n                <Col span={24}>\r\n                  <Form.Item\r\n                    name=\"closeDate\"\r\n                    rules={[{ required: true, message: 'Please input your Closed Day!' }]}\r\n                    style={{ margin: 0 }}\r\n                  >\r\n                    <Select\r\n                      style={{ width: '100%' }}\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Please select day\"\r\n                      value={closeDate}\r\n                      onChange={onDayChange}\r\n                    >\r\n                      {optionSelectDay}\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n            <Form.Item label={<span style={{ color: 'wheat' }}>OPENED AND CLOSED TIMES</span>} required>\r\n              <Row gutter={16} justify=\"center\">\r\n                <Col span={12} style={{ marginBottom: 0 }}>\r\n                  <Form.Item name=\"openTime\" rules={[{ required: true, message: 'Please input your Open Times!' }]}>\r\n                    <TimePicker style={{ width: '100%' }} format={format} value={openTime} onChange={onOpenTime} />\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={12} style={{ marginBottom: 0 }}>\r\n                  <Form.Item name=\"closeTime\" rules={[{ required: true, message: 'Please input your Close Times!' }]}>\r\n                    <TimePicker style={{ width: '100%' }} format={format} value={closeTime} onChange={onCloseTime} />\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </Form.Item>\r\n            <Row justify=\"center\">\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ width: 150, marginRight: 16 }}>\r\n                  Register\r\n                </Button>\r\n                <Button htmlType=\"button\" onClick={onReset} style={{ width: 150 }}>\r\n                  Reset\r\n                </Button>\r\n                <Row justify=\"center\" style={{ margin: 8 }}>\r\n                  <Link to=\"/register\">Register as member</Link>\r\n                  <span style={{ margin: '0 8px', color: 'wheat' }}>Or</span>\r\n                  <Link to=\"/\">already partner ?</Link>\r\n                </Row>\r\n              </Form.Item>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PartnerRegister;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Admin\\Management\\Member.js",["135","136"],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Admin\\Management\\Admin.js",["137"],"import React, { useContext, useState, useEffect, useRef } from 'react';\r\nimport { Table, Input, Button, Popconfirm, Form } from 'antd';\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ index, ...props }) => {\r\n  const [form] = Form.useForm();\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <EditableContext.Provider value={form}>\r\n        <tr {...props} />\r\n      </EditableContext.Provider>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst EditableCell = ({ title, editable, children, dataIndex, record, handleSave, ...restProps }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const inputRef = useRef();\r\n  const form = useContext(EditableContext);\r\n  useEffect(() => {\r\n    if (editing) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [editing]);\r\n\r\n  const toggleEdit = () => {\r\n    setEditing(!editing);\r\n    form.setFieldsValue({\r\n      [dataIndex]: record[dataIndex],\r\n    });\r\n  };\r\n\r\n  const save = async (e) => {\r\n    try {\r\n      const values = await form.validateFields();\r\n      toggleEdit();\r\n      handleSave({ ...record, ...values });\r\n    } catch (errInfo) {\r\n      console.log('Save failed:', errInfo);\r\n    }\r\n  };\r\n\r\n  let childNode = children;\r\n\r\n  if (editable) {\r\n    childNode = editing ? (\r\n      <Form.Item\r\n        style={{\r\n          margin: 0,\r\n        }}\r\n        name={dataIndex}\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `${title} is required.`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input ref={inputRef} onPressEnter={save} onBlur={save} />\r\n      </Form.Item>\r\n    ) : (\r\n      <div\r\n        className=\"editable-cell-value-wrap\"\r\n        style={{\r\n          paddingRight: 24,\r\n        }}\r\n        onClick={toggleEdit}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <td {...restProps}>{childNode}</td>;\r\n};\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.columns = [\r\n      {\r\n        title: 'name',\r\n        dataIndex: 'name',\r\n        width: '30%',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'age',\r\n        dataIndex: 'age',\r\n      },\r\n      {\r\n        title: 'address',\r\n        dataIndex: 'address',\r\n      },\r\n      {\r\n        title: 'operation',\r\n        dataIndex: 'operation',\r\n        render: (text, record) =>\r\n          this.state.dataSource.length >= 1 ? (\r\n            <Popconfirm title=\"Sure to delete?\" onConfirm={() => this.handleDelete(record.key)}>\r\n              <a>Delete</a>\r\n            </Popconfirm>\r\n          ) : null,\r\n      },\r\n    ];\r\n    this.state = {\r\n      dataSource: [\r\n        {\r\n          key: '0',\r\n          name: 'Edward King 0',\r\n          age: '32',\r\n          address: 'London, Park Lane no. 0',\r\n        },\r\n        {\r\n          key: '1',\r\n          name: 'Edward King 1',\r\n          age: '32',\r\n          address: 'London, Park Lane no. 1',\r\n        },\r\n      ],\r\n      count: 2,\r\n    };\r\n  }\r\n\r\n  handleDelete = (key) => {\r\n    const dataSource = [...this.state.dataSource];\r\n    this.setState({\r\n      dataSource: dataSource.filter((item) => item.key !== key),\r\n    });\r\n  };\r\n\r\n  handleAdd = () => {\r\n    const { count, dataSource } = this.state;\r\n    const newData = {\r\n      key: count,\r\n      name: `Edward King ${count}`,\r\n      age: 32,\r\n      address: `London, Park Lane no. ${count}`,\r\n    };\r\n    this.setState({\r\n      dataSource: [...dataSource, newData],\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  handleSave = (row) => {\r\n    const newData = [...this.state.dataSource];\r\n    const index = newData.findIndex((item) => row.key === item.key);\r\n    const item = newData[index];\r\n    newData.splice(index, 1, { ...item, ...row });\r\n    this.setState({\r\n      dataSource: newData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { dataSource } = this.state;\r\n    const components = {\r\n      body: {\r\n        row: EditableRow,\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          editable: col.editable,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          handleSave: this.handleSave,\r\n        }),\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={this.handleAdd}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          Add an admin\r\n        </Button>\r\n        <Table\r\n          components={components}\r\n          rowClassName={() => 'editable-row'}\r\n          bordered\r\n          dataSource={dataSource}\r\n          columns={columns}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Admin\\Management\\Partner.js",["138"],"import React, { useEffect, useState } from 'react';\r\nimport { Popconfirm, Table } from 'antd';\r\nimport axios from '../../../config/axios';\r\n\r\nfunction Partner() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n\r\n  const columns = [\r\n    {\r\n      title: 'ID',\r\n      dataIndex: 'id',\r\n      key: 'id',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Company Name',\r\n      dataIndex: 'company_name',\r\n      key: 'company_name',\r\n    },\r\n    {\r\n      title: 'Company Type',\r\n      dataIndex: 'company_type',\r\n      key: 'company_type',\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      dataIndex: 'phone',\r\n      key: 'phone',\r\n    },\r\n    {\r\n      title: 'Close Date',\r\n      dataIndex: 'closeDate',\r\n      key: 'closeDate',\r\n    },\r\n    {\r\n      title: 'Open Time',\r\n      dataIndex: 'openTime',\r\n      key: 'openTime',\r\n    },\r\n    {\r\n      title: 'Close Time',\r\n      dataIndex: 'closeTime',\r\n      key: 'closeTime',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      dataIndex: 'action',\r\n      render: (text, record) =>\r\n        dataSource.length >= 1 ? (\r\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.id)}>\r\n            <a>Delete</a>\r\n          </Popconfirm>\r\n        ) : null,\r\n    },\r\n  ];\r\n\r\n  const fetchData = () => {\r\n    axios.get('partners/all').then((res) => {\r\n      console.log(res.data);\r\n      setDataSource(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleDelete = (id) => {\r\n    const newDataSource = [...dataSource];\r\n    setDataSource(newDataSource.filter((item) => item.id !== id));\r\n  };\r\n\r\n  return <Table bordered columns={columns} dataSource={dataSource} size=\"middle\" pagination={{ pageSize: 10 }} />;\r\n}\r\n\r\nexport default Partner;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\BookingResult.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\CheckAvailability.js",["139","140","141","142","143","144"],"import React, { useContext, useState } from 'react';\r\nimport { Button, notification, Popconfirm, Table, Tag } from 'antd';\r\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\r\nimport axios from '../../config/axios';\r\nimport UserContext from '../../context/UserContext';\r\n\r\nfunction CheckAvailability() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const { id } = useContext(UserContext);\r\n  const param = useParams();\r\n\r\n  const [title, setTitle] = useState(location.state.title);\r\n  const [reserveDate, setReserveDate] = useState(location.state.reserveDate);\r\n  const [type, setType] = useState(location.state.type);\r\n  const [email, setEmail] = useState(location.state.email);\r\n  const [phone, setPhone] = useState(location.state.phone);\r\n  const [status, setStatus] = useState('Availability');\r\n\r\n  const dataSource = [\r\n    {\r\n      key: '1',\r\n      title,\r\n      reserveDate,\r\n      type,\r\n      email,\r\n      phone,\r\n      status: [status],\r\n    },\r\n  ];\r\n\r\n  const handleConfirm = (key) => {\r\n    axios\r\n      .post(`/bookings/create/${param.id}`, {\r\n        company_name: title,\r\n        reserve_date: reserveDate,\r\n        type,\r\n        email,\r\n        phone,\r\n        user_id: id,\r\n      })\r\n      .then((res) => {\r\n        notification.success({\r\n          description: 'Booking Success.',\r\n        });\r\n      });\r\n    history.push({ pathname: '/result', state: { dataSource } });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Company Name',\r\n      key: 'title',\r\n      dataIndex: 'title',\r\n    },\r\n    {\r\n      title: 'ReservationDate',\r\n      key: 'reserveDate',\r\n      dataIndex: 'reserveDate',\r\n    },\r\n    {\r\n      title: 'Booking Type',\r\n      key: 'type',\r\n      dataIndex: 'type',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      key: 'email',\r\n      dataIndex: 'email',\r\n    },\r\n    {\r\n      title: 'Phone',\r\n      key: 'phone',\r\n      dataIndex: 'phone',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      render: (status) => (\r\n        <>\r\n          {status.map((tag) => {\r\n            let color = tag === 'Availability' ? 'green' : 'volcano';\r\n            return (\r\n              <Tag color={color} key={tag}>\r\n                {tag.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      dataIndex: 'action',\r\n      render: (text, record) =>\r\n        dataSource.length >= 1 ? (\r\n          <Popconfirm\r\n            title=\"Sure to confirm?\"\r\n            onConfirm={() => handleConfirm(record.key)}\r\n            onCancel={() => history.push('/home')}\r\n          >\r\n            <Button type=\"link\">Confirm</Button>\r\n          </Popconfirm>\r\n        ) : null,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Table bordered pagination={false} columns={columns} dataSource={dataSource}></Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CheckAvailability;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Booking.js",["145"],"import { Button, notification, Space, Table } from 'antd';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport UserContext from '../../context/UserContext';\r\nimport axios from '../../config/axios';\r\n\r\nfunction Booking() {\r\n  const { id } = useContext(UserContext);\r\n  const [data, setData] = useState([]);\r\n\r\n  const onAccept = (bookingId) => {\r\n    axios\r\n      .patch('/bookings/approve', {\r\n        booking_id: bookingId,\r\n        partner_id: id,\r\n      })\r\n      .then((res) => {\r\n        notification.success({\r\n          description: 'Accept success.',\r\n        });\r\n        fetchData();\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n      key: 'email',\r\n    },\r\n    {\r\n      title: 'Date',\r\n      dataIndex: 'reserve_date',\r\n      key: 'reserve_date',\r\n    },\r\n    {\r\n      title: 'Status',\r\n      dataIndex: 'status',\r\n      key: 'status',\r\n    },\r\n    {\r\n      title: 'Action',\r\n      key: 'action',\r\n      render: (text, record) => (\r\n        <Space size=\"middle\">\r\n          <Button type=\"primary\" onClick={() => onAccept(record.id)}>\r\n            Accept\r\n          </Button>\r\n          <Button danger>Delete</Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const fetchData = () => {\r\n    axios.get(`/bookings?id=${id}`).then((res) => {\r\n      setData(res.data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  return <Table bordered columns={columns} dataSource={data} />;\r\n}\r\n\r\nexport default Booking;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Partner\\Information.js",["146","147"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Typography,\r\n  Radio,\r\n  Select,\r\n  TimePicker,\r\n  Upload,\r\n  message,\r\n  notification,\r\n} from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport UserContext from '../../context/UserContext';\r\nimport axios from '../../config/axios';\r\nimport moment from 'moment';\r\n\r\nfunction Information() {\r\n  const { Title } = Typography;\r\n  const { Option } = Select;\r\n\r\n  const { id } = useContext(UserContext);\r\n  const [form] = Form.useForm();\r\n\r\n  const format = 'HH:mm';\r\n\r\n  const [name, setName] = useState('');\r\n  const [type, setType] = useState('');\r\n  const [openTime, setOpenTime] = useState(null);\r\n  const [closeTime, setCloseTime] = useState(null);\r\n  const [closeDate, setCloseDate] = useState([]);\r\n  const [phone, setPhone] = useState('');\r\n  const days = ['Mon', 'Tue', 'Wed', 'Thur', 'Fri', 'Sat', 'Sun'];\r\n\r\n  const optionSelectDay = days.map((day) => (\r\n    <Option key={day} value={day}>\r\n      {day}\r\n    </Option>\r\n  ));\r\n\r\n  const props = {\r\n    name: 'file',\r\n    headers: {\r\n      authorization: 'authorization-text',\r\n    },\r\n    onChange(info) {\r\n      if (info.file.status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (info.file.status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully`);\r\n      } else if (info.file.status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(`/partners?id=${id}`).then((res) => {\r\n      if (res.data !== null) {\r\n        form.setFieldsValue({\r\n          name: res.data.company_name,\r\n          type: res.data.company_type,\r\n          closeDate: res.data.closeDate ? JSON.parse(res.data.closeDate) : closeDate,\r\n          openTime: res.data.openTime ? moment(res.data.openTime, format) : openTime,\r\n          closeTime: res.data.closeTime ? moment(res.data.closeTime, format) : closeTime,\r\n          phone: res.data.phone,\r\n        });\r\n        setName(res.data.company_name);\r\n        setType(res.data.company_type);\r\n      }\r\n    });\r\n    console.log(openTime, closeTime);\r\n  }, []);\r\n\r\n  const onTypeChange = (e) => {\r\n    setType(e.target.value);\r\n  };\r\n\r\n  const onDayChange = (day) => {\r\n    setCloseDate(day);\r\n  };\r\n\r\n  const onOpenTime = (time) => {\r\n    if (time) {\r\n      setOpenTime(time.format(format));\r\n    }\r\n  };\r\n\r\n  const onCloseTime = (time) => {\r\n    if (time) {\r\n      setCloseTime(time.format(format));\r\n    }\r\n  };\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    const formData = new FormData();\r\n    formData.append('company_name', name);\r\n    formData.append('company_type', type);\r\n    formData.append('image', values.image.file.originFileObj);\r\n    formData.append('closeDate', JSON.stringify(closeDate));\r\n    formData.append('openTime', openTime);\r\n    formData.append('closeTime', closeTime);\r\n    formData.append('phone', phone);\r\n    axios.post(`/partners/upload?id=${id}`, formData).then((res) => {\r\n      notification.success({\r\n        description: 'Save success.',\r\n      });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      layout=\"vertical\"\r\n      initialValues={{ type }}\r\n      onFinish={onFinish}\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n      }}\r\n    >\r\n      <Row justify=\"center\">\r\n        <Title level={2} underline=\"true\">\r\n          INFORMATION DETAILS\r\n        </Title>\r\n      </Row>\r\n      <Row justify=\"center\" style={{ width: '100%' }}>\r\n        <Col span={12}>\r\n          <Form.Item\r\n            label={<span>COMPANY NAME</span>}\r\n            name=\"name\"\r\n            rules={[{ required: true, message: 'Please input your Name!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"type\"\r\n            label={<span>COMPANY TYPE</span>}\r\n            rules={[{ required: true, message: 'Please select your Type!' }]}\r\n          >\r\n            <Radio.Group size=\"large\" buttonStyle=\"solid\" onChange={onTypeChange}>\r\n              <Radio.Button value=\"Fitness\">Fitness</Radio.Button>\r\n              <Radio.Button value=\"Auditorium\">Auditorium</Radio.Button>\r\n              <Radio.Button value=\"Meeting Room\">Meeting Room</Radio.Button>\r\n            </Radio.Group>\r\n          </Form.Item>\r\n          <Form.Item name=\"image\" label={<span>UPLOAD IMAGES</span>} required>\r\n            <Upload {...props}>\r\n              <Button icon={<UploadOutlined />}>Upload</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label={<span>PHONE</span>}\r\n            name=\"phone\"\r\n            rules={[{ required: true, message: 'Please input your Phone!' }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label={<span>CLOSED DAY</span>} style={{ marginBottom: 8 }} required>\r\n            <Row gutter={8} justify=\"center\">\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name=\"closeDate\"\r\n                  rules={[{ required: true, message: 'Please input your Close Day!' }]}\r\n                  style={{ margin: 0 }}\r\n                >\r\n                  <Select\r\n                    style={{ width: '100%' }}\r\n                    mode=\"multiple\"\r\n                    placeholder=\"Please select day\"\r\n                    value={closeDate}\r\n                    onChange={onDayChange}\r\n                  >\r\n                    {optionSelectDay}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n          <Form.Item label={<span>OPENED AND CLOSED TIMES</span>} style={{ marginBottom: 0 }} required>\r\n            <Row gutter={16} justify=\"center\">\r\n              <Col span={12} style={{ marginBottom: 0 }}>\r\n                <Form.Item name=\"openTime\" rules={[{ required: true, message: 'Please input your Open Times!' }]}>\r\n                  <TimePicker style={{ width: '100%' }} format={format} value={openTime} onChange={onOpenTime} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12} style={{ marginBottom: 0 }}>\r\n                <Form.Item name=\"closeTime\" rules={[{ required: true, message: 'Please input your Close Times!' }]}>\r\n                  <TimePicker style={{ width: '100%' }} format={format} value={closeTime} onChange={onCloseTime} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n          <Row justify=\"center\">\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" style={{ width: 150, marginRight: 16 }}>\r\n                Save\r\n              </Button>\r\n              <Button htmlType=\"button\" onClick={onReset} style={{ width: 150 }}>\r\n                Reset\r\n              </Button>\r\n            </Form.Item>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default Information;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\User\\PartnerList.js",["148","149","150","151","152","153","154"],"import React, { useEffect, useState } from 'react';\r\nimport { List, Card, Row, Col, Typography, Tag, Button } from 'antd';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport axios from '../../config/axios';\r\n\r\nfunction PartnerList() {\r\n  const { Text } = Typography;\r\n\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const [data, setData] = useState([]);\r\n  const [title, setTitle] = useState('Fitness First');\r\n  const [reserveDate, setReserveDate] = useState(location.state.reserveDate);\r\n  const [type, setType] = useState(location.state.type);\r\n  const [email, setEmail] = useState(location.state.email);\r\n  const [phone, setPhone] = useState(location.state.phone);\r\n  const [status, setStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios.get('/partners/all').then((res) => {\r\n      console.log(res.data);\r\n      setData(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const onBooking = (title, id) => {\r\n    history.push({ pathname: `/check/${id}`, state: { title, reserveDate, type, email, phone } });\r\n    setStatus(!status);\r\n  };\r\n  const onCancel = () => {\r\n    setStatus(!status);\r\n  };\r\n\r\n  return (\r\n    <List\r\n      grid={{\r\n        gutter: 16,\r\n        xs: 1,\r\n        sm: 2,\r\n        md: 2,\r\n        lg: 2,\r\n        xl: 3,\r\n        xxl: 4,\r\n      }}\r\n      dataSource={data}\r\n      renderItem={(item) => (\r\n        <List.Item>\r\n          <Card title={item.company_name}>\r\n            <Row gutter={16} justify=\"center\">\r\n              <Col span={7}>\r\n                <img alt=\"room image\" src={item.image} width=\"100%\" height=\"100%\" style={{ objectFit: 'cover' }} />\r\n              </Col>\r\n              <Col span={10}>\r\n                <Row>\r\n                  <Tag color={item.status === 'Availability' ? 'green' : 'volcano'}>{item.status}</Tag>\r\n                </Row>\r\n                <Row>\r\n                  <Text>\r\n                    Time: {item.openTime} - {item.closeTime}\r\n                  </Text>\r\n                </Row>\r\n                <Row>\r\n                  <Text type=\"danger\">Closed: {JSON.parse(item.closeDate).join(' ')}</Text>\r\n                </Row>\r\n              </Col>\r\n              <Col span={7}>\r\n                {!status ? (\r\n                  <Button\r\n                    style={{ width: '100%' }}\r\n                    type=\"primary\"\r\n                    onClick={() => onBooking(item.company_name, item.id)}\r\n                  >\r\n                    Booking\r\n                  </Button>\r\n                ) : (\r\n                  <Button style={{ width: '100%' }} type=\"primary\" danger onClick={onCancel}>\r\n                    Que\r\n                  </Button>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </List.Item>\r\n      )}\r\n      style={{ width: '96%' }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PartnerList;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Register\\index.js",["155"],"import React, { useContext } from 'react';\r\nimport { Form, Input, Button, Row, Col, Typography, notification } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport axios from '../../config/axios';\r\n\r\nfunction Register() {\r\n  const { Title } = Typography;\r\n\r\n  const history = useHistory();\r\n  const [form] = Form.useForm();\r\n\r\n  const onReset = () => {\r\n    form.resetFields();\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    axios\r\n      .post('/users/register', {\r\n        email: values.email,\r\n        password: values.password,\r\n        name: values.name,\r\n        phone: values.phone,\r\n      })\r\n      .then((res) => {\r\n        notification.success({\r\n          description: 'Register success.',\r\n        });\r\n        history.push('/');\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        notification.error({\r\n          description: 'Email or Phone has already taken.',\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        form={form}\r\n        layout=\"vertical\"\r\n        onFinish={onFinish}\r\n        style={{\r\n          width: '100%',\r\n        }}\r\n      >\r\n        <Row justify=\"center\">\r\n          <Title underline=\"true\" style={{ color: 'wheat' }}>\r\n            REGISTER - MEMBER\r\n          </Title>\r\n        </Row>\r\n        <Row justify=\"center\" style={{ width: '100%' }}>\r\n          <Col span={12}>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>EMAIL</span>}\r\n              name=\"email\"\r\n              rules={[{ required: true, message: 'Please input your Email!' }]}\r\n            >\r\n              <Input prefix={<UserOutlined />} type=\"email\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>PASSWORD</span>}\r\n              name=\"password\"\r\n              rules={[{ required: true, message: 'Please input your Password!' }]}\r\n            >\r\n              <Input.Password prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"confirm\"\r\n              label={<span style={{ color: 'wheat' }}>CONFIRM PASSWORD</span>}\r\n              dependencies={['password']}\r\n              hasFeedback\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please confirm your password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n\r\n                    return Promise.reject('The two passwords that you entered do not match!');\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>NAME</span>}\r\n              name=\"name\"\r\n              rules={[{ required: true, message: 'Please input your Name!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              label={<span style={{ color: 'wheat' }}>PHONE</span>}\r\n              name=\"phone\"\r\n              rules={[{ required: true, message: 'Please input your Phone!' }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Row justify=\"center\">\r\n              <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" style={{ width: 150, marginRight: 16 }}>\r\n                  Register\r\n                </Button>\r\n                <Button htmlType=\"button\" onClick={onReset} style={{ width: 150 }}>\r\n                  Reset\r\n                </Button>\r\n                <Row justify=\"center\" style={{ margin: 8 }}>\r\n                  <Link to=\"/p/register\">Register as partner</Link>\r\n                  <span style={{ margin: '0 8px', color: 'wheat' }}>Or</span>\r\n                  <Link to=\"/\">already member ?</Link>\r\n                </Row>\r\n              </Form.Item>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\pages\\Login\\index.js",[],"C:\\Users\\Stripz\\Desktop\\Coding\\CodeCamp7_Offline\\Personal_Project\\person-frontend\\src\\config\\axios.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":31,"column":1,"nodeType":"162","endLine":37,"endColumn":3},{"ruleId":"163","severity":1,"message":"164","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":1,"column":39,"nodeType":"165","messageId":"166","endLine":1,"endColumn":48},{"ruleId":"163","severity":1,"message":"168","line":1,"column":50,"nodeType":"165","messageId":"166","endLine":1,"endColumn":58},{"ruleId":"163","severity":1,"message":"169","line":3,"column":50,"nodeType":"165","messageId":"166","endLine":3,"endColumn":55},{"ruleId":"163","severity":1,"message":"170","line":4,"column":56,"nodeType":"165","messageId":"166","endLine":4,"endColumn":76},{"ruleId":"163","severity":1,"message":"171","line":13,"column":11,"nodeType":"165","messageId":"166","endLine":13,"endColumn":26},{"ruleId":"163","severity":1,"message":"172","line":14,"column":17,"nodeType":"165","messageId":"166","endLine":14,"endColumn":25},{"ruleId":"163","severity":1,"message":"168","line":1,"column":29,"nodeType":"165","messageId":"166","endLine":1,"endColumn":37},{"ruleId":"163","severity":1,"message":"170","line":9,"column":3,"nodeType":"165","messageId":"166","endLine":9,"endColumn":23},{"ruleId":"163","severity":1,"message":"171","line":19,"column":11,"nodeType":"165","messageId":"166","endLine":19,"endColumn":26},{"ruleId":"163","severity":1,"message":"173","line":6,"column":20,"nodeType":"165","messageId":"166","endLine":6,"endColumn":31},{"ruleId":"163","severity":1,"message":"174","line":7,"column":20,"nodeType":"165","messageId":"166","endLine":7,"endColumn":31},{"ruleId":"163","severity":1,"message":"175","line":8,"column":19,"nodeType":"165","messageId":"166","endLine":8,"endColumn":29},{"ruleId":"176","severity":1,"message":"177","line":30,"column":6,"nodeType":"178","endLine":30,"endColumn":8,"suggestions":"179"},{"ruleId":"163","severity":1,"message":"180","line":13,"column":11,"nodeType":"165","messageId":"166","endLine":13,"endColumn":18},{"ruleId":"163","severity":1,"message":"181","line":2,"column":22,"nodeType":"165","messageId":"166","endLine":2,"endColumn":27},{"ruleId":"182","severity":1,"message":"183","line":50,"column":13,"nodeType":"184","endLine":50,"endColumn":16},{"ruleId":"182","severity":1,"message":"183","line":101,"column":15,"nodeType":"184","endLine":101,"endColumn":18},{"ruleId":"182","severity":1,"message":"183","line":55,"column":13,"nodeType":"184","endLine":55,"endColumn":16},{"ruleId":"163","severity":1,"message":"185","line":14,"column":17,"nodeType":"165","messageId":"166","endLine":14,"endColumn":25},{"ruleId":"163","severity":1,"message":"186","line":15,"column":23,"nodeType":"165","messageId":"166","endLine":15,"endColumn":37},{"ruleId":"163","severity":1,"message":"187","line":16,"column":16,"nodeType":"165","messageId":"166","endLine":16,"endColumn":23},{"ruleId":"163","severity":1,"message":"188","line":17,"column":17,"nodeType":"165","messageId":"166","endLine":17,"endColumn":25},{"ruleId":"163","severity":1,"message":"189","line":18,"column":17,"nodeType":"165","messageId":"166","endLine":18,"endColumn":25},{"ruleId":"163","severity":1,"message":"190","line":19,"column":18,"nodeType":"165","messageId":"166","endLine":19,"endColumn":27},{"ruleId":"176","severity":1,"message":"191","line":62,"column":6,"nodeType":"178","endLine":62,"endColumn":8,"suggestions":"192"},{"ruleId":"163","severity":1,"message":"189","line":35,"column":17,"nodeType":"165","messageId":"166","endLine":35,"endColumn":25},{"ruleId":"176","severity":1,"message":"193","line":77,"column":6,"nodeType":"178","endLine":77,"endColumn":8,"suggestions":"194"},{"ruleId":"163","severity":1,"message":"195","line":13,"column":10,"nodeType":"165","messageId":"166","endLine":13,"endColumn":15},{"ruleId":"163","severity":1,"message":"185","line":13,"column":17,"nodeType":"165","messageId":"166","endLine":13,"endColumn":25},{"ruleId":"163","severity":1,"message":"186","line":14,"column":23,"nodeType":"165","messageId":"166","endLine":14,"endColumn":37},{"ruleId":"163","severity":1,"message":"187","line":15,"column":16,"nodeType":"165","messageId":"166","endLine":15,"endColumn":23},{"ruleId":"163","severity":1,"message":"188","line":16,"column":17,"nodeType":"165","messageId":"166","endLine":16,"endColumn":25},{"ruleId":"163","severity":1,"message":"189","line":17,"column":17,"nodeType":"165","messageId":"166","endLine":17,"endColumn":25},{"ruleId":"196","severity":1,"message":"197","line":52,"column":17,"nodeType":"184","endLine":52,"endColumn":116},{"ruleId":"163","severity":1,"message":"198","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":27},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Children' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Badge' is defined but never used.","'NotificationOutlined' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'setCount' is assigned a value but never used.","'setVisitors' is assigned a value but never used.","'setBookings' is assigned a value but never used.","'setReviews' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["201"],"'setRole' is assigned a value but never used.","'Space' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setTitle' is assigned a value but never used.","'setReserveDate' is assigned a value but never used.","'setType' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'setPhone' is assigned a value but never used.","'setStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["202"],"React Hook useEffect has missing dependencies: 'closeDate', 'closeTime', 'form', 'id', and 'openTime'. Either include them or remove the dependency array.",["203"],"'title' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},"Update the dependencies array to be: [form, id]",{"range":"210","text":"211"},"Update the dependencies array to be: [fetchData]",{"range":"212","text":"213"},"Update the dependencies array to be: [closeDate, closeTime, form, id, openTime]",{"range":"214","text":"215"},[1002,1004],"[form, id]",[1416,1418],"[fetchData]",[2238,2240],"[closeDate, closeTime, form, id, openTime]"]